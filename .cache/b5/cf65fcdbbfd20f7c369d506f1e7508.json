{"id":"reducers.js","dependencies":[{"name":"/home/carlos/workspace/hub/example-redux/package.json","includedInParent":true,"mtime":1593083838525},{"name":"./actions","loc":{"line":1,"column":38},"parent":"/home/carlos/workspace/hub/example-redux/reducers.js","resolved":"/home/carlos/workspace/hub/example-redux/actions.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.todos = todos;\n\nvar _actions = require(\"./actions\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar initialState = {\n  todos: []\n};\n\nfunction todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.todos;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case _actions.ADD_TODO:\n      return [].concat(_toConsumableArray(state), [{\n        text: action.text,\n        complete: false\n      }]);\n\n    case _actions.COMPLETE_TODO:\n      return state.map(function (state, index) {\n        return index === action.index ? _objectSpread(_objectSpread({}, state), {}, {\n          complete: true\n        }) : state;\n      });\n\n    default:\n      return state;\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"reducers.js","original":{"line":1,"column":0}},{"generated":{"line":28,"column":0},"source":"reducers.js","original":{"line":3,"column":0}},{"name":"initialState","generated":{"line":28,"column":4},"source":"reducers.js","original":{"line":3,"column":6}},{"generated":{"line":28,"column":16},"source":"reducers.js","original":{"line":3,"column":18}},{"generated":{"line":28,"column":19},"source":"reducers.js","original":{"line":3,"column":21}},{"name":"todos","generated":{"line":29,"column":0},"source":"reducers.js","original":{"line":4,"column":4}},{"name":"todos","generated":{"line":29,"column":2},"source":"reducers.js","original":{"line":4,"column":4}},{"generated":{"line":29,"column":7},"source":"reducers.js","original":{"line":4,"column":9}},{"generated":{"line":29,"column":9},"source":"reducers.js","original":{"line":4,"column":11}},{"generated":{"line":30,"column":0},"source":"reducers.js","original":{"line":3,"column":21}},{"generated":{"line":30,"column":1},"source":"reducers.js","original":{"line":3,"column":0}},{"generated":{"line":32,"column":0},"source":"reducers.js","original":{"line":8,"column":0}},{"name":"todos","generated":{"line":32,"column":9},"source":"reducers.js","original":{"line":8,"column":9}},{"generated":{"line":32,"column":14},"source":"reducers.js","original":{"line":8,"column":0}},{"generated":{"line":32,"column":17},"source":"reducers.js","original":{"line":8,"column":49}},{"generated":{"line":33,"column":0},"source":"reducers.js","original":{"line":8,"column":49}},{"name":"state","generated":{"line":33,"column":6},"source":"reducers.js","original":{"line":8,"column":15}},{"generated":{"line":33,"column":11},"source":"reducers.js","original":{"line":8,"column":49}},{"name":"initialState","generated":{"line":33,"column":82},"source":"reducers.js","original":{"line":8,"column":21}},{"generated":{"line":33,"column":94},"source":"reducers.js","original":{"line":8,"column":33}},{"name":"todos","generated":{"line":33,"column":95},"source":"reducers.js","original":{"line":8,"column":34}},{"generated":{"line":33,"column":100},"source":"reducers.js","original":{"line":8,"column":49}},{"generated":{"line":34,"column":0},"source":"reducers.js","original":{"line":8,"column":49}},{"name":"action","generated":{"line":34,"column":6},"source":"reducers.js","original":{"line":8,"column":41}},{"generated":{"line":34,"column":12},"source":"reducers.js","original":{"line":8,"column":49}},{"generated":{"line":36,"column":0},"source":"reducers.js","original":{"line":9,"column":4}},{"name":"action","generated":{"line":36,"column":10},"source":"reducers.js","original":{"line":9,"column":11}},{"generated":{"line":36,"column":16},"source":"reducers.js","original":{"line":9,"column":17}},{"name":"type","generated":{"line":36,"column":17},"source":"reducers.js","original":{"line":9,"column":18}},{"generated":{"line":36,"column":21},"source":"reducers.js","original":{"line":9,"column":4}},{"generated":{"line":37,"column":0},"source":"reducers.js","original":{"line":10,"column":8}},{"name":"ADD_TODO","generated":{"line":37,"column":9},"source":"reducers.js","original":{"line":10,"column":13}},{"generated":{"line":37,"column":26},"source":"reducers.js","original":{"line":10,"column":8}},{"generated":{"line":38,"column":0},"source":"reducers.js","original":{"line":12,"column":12}},{"name":"state","generated":{"line":38,"column":42},"source":"reducers.js","original":{"line":13,"column":19}},{"generated":{"line":38,"column":47},"source":"reducers.js","original":{"line":12,"column":12}},{"generated":{"line":38,"column":51},"source":"reducers.js","original":{"line":14,"column":16}},{"name":"text","generated":{"line":39,"column":0},"source":"reducers.js","original":{"line":15,"column":20}},{"name":"text","generated":{"line":39,"column":8},"source":"reducers.js","original":{"line":15,"column":20}},{"generated":{"line":39,"column":12},"source":"reducers.js","original":{"line":15,"column":24}},{"name":"action","generated":{"line":39,"column":14},"source":"reducers.js","original":{"line":15,"column":26}},{"generated":{"line":39,"column":20},"source":"reducers.js","original":{"line":15,"column":32}},{"name":"text","generated":{"line":39,"column":21},"source":"reducers.js","original":{"line":15,"column":33}},{"generated":{"line":39,"column":25},"source":"reducers.js","original":{"line":14,"column":16}},{"name":"complete","generated":{"line":40,"column":0},"source":"reducers.js","original":{"line":16,"column":20}},{"name":"complete","generated":{"line":40,"column":8},"source":"reducers.js","original":{"line":16,"column":20}},{"generated":{"line":40,"column":16},"source":"reducers.js","original":{"line":16,"column":28}},{"generated":{"line":40,"column":18},"source":"reducers.js","original":{"line":16,"column":30}},{"generated":{"line":41,"column":0},"source":"reducers.js","original":{"line":14,"column":16}},{"generated":{"line":41,"column":7},"source":"reducers.js","original":{"line":12,"column":12}},{"generated":{"line":43,"column":0},"source":"reducers.js","original":{"line":20,"column":8}},{"name":"COMPLETE_TODO","generated":{"line":43,"column":9},"source":"reducers.js","original":{"line":20,"column":13}},{"generated":{"line":43,"column":31},"source":"reducers.js","original":{"line":20,"column":8}},{"generated":{"line":44,"column":0},"source":"reducers.js","original":{"line":21,"column":12}},{"name":"state","generated":{"line":44,"column":13},"source":"reducers.js","original":{"line":21,"column":19}},{"generated":{"line":44,"column":18},"source":"reducers.js","original":{"line":21,"column":24}},{"name":"map","generated":{"line":44,"column":19},"source":"reducers.js","original":{"line":21,"column":25}},{"generated":{"line":44,"column":22},"source":"reducers.js","original":{"line":21,"column":19}},{"generated":{"line":44,"column":23},"source":"reducers.js","original":{"line":21,"column":29}},{"name":"state","generated":{"line":44,"column":33},"source":"reducers.js","original":{"line":21,"column":30}},{"generated":{"line":44,"column":38},"source":"reducers.js","original":{"line":21,"column":29}},{"name":"index","generated":{"line":44,"column":40},"source":"reducers.js","original":{"line":21,"column":37}},{"generated":{"line":44,"column":45},"source":"reducers.js","original":{"line":21,"column":29}},{"generated":{"line":45,"column":0},"source":"reducers.js","original":{"line":21,"column":29}},{"name":"index","generated":{"line":45,"column":15},"source":"reducers.js","original":{"line":22,"column":16}},{"generated":{"line":45,"column":20},"source":"reducers.js","original":{"line":22,"column":21}},{"name":"action","generated":{"line":45,"column":25},"source":"reducers.js","original":{"line":22,"column":26}},{"generated":{"line":45,"column":31},"source":"reducers.js","original":{"line":22,"column":32}},{"name":"index","generated":{"line":45,"column":32},"source":"reducers.js","original":{"line":22,"column":33}},{"generated":{"line":45,"column":37},"source":"reducers.js","original":{"line":22,"column":16}},{"name":"state","generated":{"line":45,"column":72},"source":"reducers.js","original":{"line":22,"column":46}},{"generated":{"line":45,"column":77},"source":"reducers.js","original":{"line":22,"column":16}},{"name":"complete","generated":{"line":46,"column":0},"source":"reducers.js","original":{"line":22,"column":53}},{"name":"complete","generated":{"line":46,"column":10},"source":"reducers.js","original":{"line":22,"column":53}},{"generated":{"line":46,"column":18},"source":"reducers.js","original":{"line":22,"column":61}},{"generated":{"line":46,"column":20},"source":"reducers.js","original":{"line":22,"column":63}},{"generated":{"line":47,"column":0},"source":"reducers.js","original":{"line":22,"column":16}},{"name":"state","generated":{"line":47,"column":13},"source":"reducers.js","original":{"line":22,"column":72}},{"generated":{"line":47,"column":18},"source":"reducers.js","original":{"line":21,"column":29}},{"generated":{"line":48,"column":0},"source":"reducers.js","original":{"line":21,"column":29}},{"generated":{"line":48,"column":7},"source":"reducers.js","original":{"line":21,"column":19}},{"generated":{"line":48,"column":8},"source":"reducers.js","original":{"line":21,"column":12}},{"generated":{"line":50,"column":0},"source":"reducers.js","original":{"line":24,"column":8}},{"generated":{"line":51,"column":0},"source":"reducers.js","original":{"line":25,"column":12}},{"name":"state","generated":{"line":51,"column":13},"source":"reducers.js","original":{"line":25,"column":19}},{"generated":{"line":51,"column":18},"source":"reducers.js","original":{"line":25,"column":12}},{"generated":{"line":52,"column":0},"source":"reducers.js","original":{"line":9,"column":4}},{"generated":{"line":53,"column":0},"source":"reducers.js","original":{"line":27,"column":1}}],"sources":{"reducers.js":"import {ADD_TODO, COMPLETE_TODO} from './actions';\n\nconst initialState = {\n    todos: []\n};\n\n\nfunction todos(state=initialState.todos, action) {\n    switch(action.type) {\n        case ADD_TODO:\n\n            return  [\n                ...state,\n                {\n                    text: action.text,\n                    complete: false\n                }\n               \n            ]\n        case COMPLETE_TODO:\n            return state.map((state, index) =>\n                index === action.index ? { ...state, complete: true } : state\n              )\n        default:\n            return state;\n    }\n}\n\nexport {todos};"},"lineCount":null}},"error":null,"hash":"8e99655da282b2e64458516008d47d08","cacheData":{"env":{}}}